name: Deploy VitePress site to Pages

on:
  push:
    branches: [main]

  # 允许你从 Actions 选项卡手动运行此工作流程
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限，以允许部署到 GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# 只允许同时进行一次部署，跳过正在运行和最新队列之间的运行队列
# 但是，不要取消正在进行的运行，因为我们希望允许这些生产部署完成
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  # 构建工作
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 如果未启用 lastUpdated，则不需要
      # - uses: pnpm/action-setup@v3 # 如果使用 pnpm，请取消注释
      # - uses: oven-sh/setup-bun@v1 # 如果使用 Bun，请取消注释
      - name: 📦 安装 Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - name: ⚙️ 设置 Pages
        uses: actions/configure-pages@v4
      - name: ✅ 安装依赖
        run: yarn install
      - name: 📝 构建静态页面
        run: yarn docs:build
      - name: 🚀 更新文章
        uses: actions/upload-pages-artifact@v3
        with:
          path: .vitepress/dist
      - name: 🗂️ 提交构建后的文件到 gh-pages 分支
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "Github Actions"
          git add .vitepress/dist
          git commit -m "静态页面"
          git push origin `git subtree split --prefix .vitepress/dist main`:gh-pages --force

  # 部署工作
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: 🚀 部署到 GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4